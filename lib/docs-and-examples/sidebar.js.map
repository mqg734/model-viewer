{"version":3,"file":"sidebar.js","sourceRoot":"","sources":["../../src/docs-and-examples/sidebar.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet globalCurrentView: string[] = [];\nlet previouslyActive: string = '';\nlet toRemove = '';\nlet order: any[] = [];  // TODO, switch to dictionary\n\nlet isFirstOpen = true;      // is true on the first observation of all entries\nlet everyEntry: any[] = [];  // a list of all attributes/properties etc.\n\ninterface SidebarIds {\n  name: string, subcategory: string, category: string\n}\n\nfunction activateSidebar(sidebarIds: SidebarIds) {\n  document.querySelector(`div[id=${sidebarIds.name}]`)!.classList.add('active');\n  document.querySelector(`h4[id=${sidebarIds.subcategory}]`)!.classList.add(\n      'active');\n  document.querySelector(`h3[id=${sidebarIds.category}]`)!.classList.add(\n      'active');\n}\n\nfunction deactivateSidebar(sidebarIds: SidebarIds) {\n  document.querySelector(`div[id=${sidebarIds.name}]`)!.classList.remove(\n      'active');\n  document.querySelector(`h4[id=${sidebarIds.subcategory}]`)!.classList.remove(\n      'active');\n  document.querySelector(`h3[id=${sidebarIds.category}]`)!.classList.remove(\n      'active');\n}\n\nfunction addDeactive(sidebarName: string) {\n  document.querySelector(`div[id=${sidebarName}]`)!.classList.add('de-active');\n}\n\nfunction removeDeactive(sidebarName: string) {\n  document.querySelector(`div[id=${sidebarName}]`)!.classList.remove(\n      'de-active');\n}\n\nexport function getSidebarCategoryForNewPage(): string {\n  return previouslyActive[0];\n}\n\nfunction getSidebarIdsFromSidebarName(name: string): SidebarIds {\n  const sb = 'sidebar';\n  const sidebarName = name;\n  let sidebarSub = sidebarName.split('-').slice(0, 2);\n  let sidebarCat = sidebarName.split('-').slice(0, 1);\n  sidebarSub.push(sb);\n  const sidebarSubcategory = sidebarSub.join('-');\n  sidebarCat.push(sb);\n  const sidebarCategory = sidebarCat.join('-');\n  return {\n    name: sidebarName,\n    subcategory: sidebarSubcategory,\n    category: sidebarCategory\n  };\n}\n\nfunction getSidebarIdsFromId(id: string): SidebarIds {\n  const sb = 'sidebar';\n  const sidebarName = id.split('-').slice(1, 10).join('-');\n  let sidebarSub = id.split('-').slice(1, 3);\n  let sidebarCat = id.split('-').slice(1, 2);\n  sidebarSub.push(sb);\n  const sidebarSubcategory = sidebarSub.join('-');\n  sidebarCat.push(sb);\n  const sidebarCategory = sidebarCat.join('-');\n  return {\n    name: sidebarName,\n    subcategory: sidebarSubcategory,\n    category: sidebarCategory\n  };\n}\n\n/*\n * sidebarSubcategory: string of the old subcategory being replaced\n * newSidebarSubcategory: string of the new subcategory\n * example:\n *  sidebarSubcategory = loading-attributes\n *  newSidebarSubcategory = loading-cssProperties\n */\nfunction updateSidebarView(\n    sidebarSubcategory: string, newSidebarSubcategory: string) {\n  if (sidebarSubcategory !== newSidebarSubcategory) {\n    for (const entry of everyEntry) {\n      const id = entry.target.getAttribute('id');\n      const sidebarIds = getSidebarIdsFromId(id);\n      const currentSidebarName = sidebarIds.name;\n      if (sidebarIds.subcategory !== newSidebarSubcategory) {\n        addDeactive(currentSidebarName);\n      } else {\n        removeDeactive(currentSidebarName);\n      }\n    }\n  }\n}\n\n/*\n * Hide all of the entries not within the current subcategory\n */\nfunction updateSidebarViewFirstTime(entries: any[]) {\n  isFirstOpen = false;   // global\n  everyEntry = entries;  // Sets global variable for use in updateSidebarView\n  const sidebarIds = getSidebarIdsFromSidebarName(previouslyActive);\n  updateSidebarView('', sidebarIds.subcategory);\n}\n\nfunction updateFromOldToNew(prev: string, sidebarIds: SidebarIds) {\n  const prevSidebarIds = getSidebarIdsFromSidebarName(prev);\n  deactivateSidebar(prevSidebarIds);\n  activateSidebar(sidebarIds);\n  updateSidebarView(prevSidebarIds.subcategory, sidebarIds.subcategory);\n}\n\nfunction removeActiveEntry(sidebarIds: SidebarIds) {\n  deactivateSidebar(sidebarIds);\n  if (globalCurrentView.length >= 2) {\n    const newSidebarIds = getSidebarIdsFromSidebarName(globalCurrentView[1]);\n    activateSidebar(newSidebarIds);\n    updateSidebarView(sidebarIds.subcategory, newSidebarIds.subcategory);\n    previouslyActive = newSidebarIds.name;\n  }\n}\n\nfunction handleHTMLEntry(htmlEntry: IntersectionObserverEntry) {\n  const id = htmlEntry.target.getAttribute('id')!;\n  const sidebarIds = getSidebarIdsFromId(id);\n\n  // entry inside viewing window\n  if (htmlEntry.intersectionRatio > 0) {\n    if (toRemove.length > 0) {\n      // inside a large div\n      updateFromOldToNew(toRemove, sidebarIds);\n      toRemove = '';\n    } else if (globalCurrentView.length === 0) {\n      // empty globalCurrentView, add to view\n      activateSidebar(sidebarIds);\n      previouslyActive = sidebarIds.name;\n      globalCurrentView.push(sidebarIds.name);\n    } else if (\n        order.indexOf(previouslyActive) > order.indexOf(sidebarIds.name)) {\n      // scrolling up\n      updateFromOldToNew(globalCurrentView[0], sidebarIds);\n      globalCurrentView.unshift(sidebarIds.name);\n      previouslyActive = sidebarIds.name;\n    } else {\n      // an entry is in view under the current active entry\n      globalCurrentView.push(sidebarIds.name);\n    }\n  } else if (globalCurrentView.length === 1) {\n    // entry outside viewing window, but entry is the only element\n    toRemove = previouslyActive;\n  } else {\n    // entry outside viewing window, active entry now out of view\n    if (previouslyActive === sidebarIds.name) {\n      // entry being removed from view is currently active\n      removeActiveEntry(sidebarIds);\n    }\n    // always remove entry when out of view\n    globalCurrentView = globalCurrentView.filter(e => e !== sidebarIds.name);\n  }\n}\n\n/*\n * for page jump its just easier to restart, so deactivate everything, clear\n * the global view, then only update with whats in view\n */\nfunction handlePageJump(entries: IntersectionObserverEntry[]) {\n  globalCurrentView = [];\n  toRemove = '';\n  previouslyActive = '';\n  updateSidebarView('', 'null');\n  for (const htmlEntry of entries) {\n    const id = htmlEntry.target.getAttribute('id')!;\n    const sidebarIds = getSidebarIdsFromId(id);\n    deactivateSidebar(sidebarIds);\n  }\n  let isAtTop = true;\n  for (const htmlEntry of entries) {\n    if (htmlEntry.intersectionRatio > 0) {\n      if (isAtTop) {\n        isAtTop = false;\n        const id = htmlEntry.target.getAttribute('id')!;\n        const sidebarIds = getSidebarIdsFromId(id);\n        updateSidebarView('', sidebarIds.subcategory);\n      }\n      handleHTMLEntry(htmlEntry);\n    }\n  }\n}\n\n\n/*\n * Update the table of contents based on how the page is viewed.\n */\nexport function sidebarObserver(docsOrExamples: 'docs'|'examples') {\n  if (docsOrExamples === 'docs') {\n    const observer = new IntersectionObserver(entries => {\n      if (!isFirstOpen && entries.length > 2) {\n        handlePageJump(entries);\n      } else {\n        for (const htmlEntry of entries) {\n          handleHTMLEntry(htmlEntry);\n        }\n      }\n      // First time all of the observers are set entries will be every entry.\n      if (isFirstOpen) {\n        updateSidebarViewFirstTime(entries);\n      }\n    });\n\n    // TODO: update for docs/examples, in examples we may want to use specific\n    // examples or headers.\n\n    // Fill the observer with the necessary divs to observe:\n    // i.e. attributes, properties, events, methods, slots, custom css.\n    document.querySelectorAll('div[id*=\"docs\"]').forEach((section) => {\n      const idSplitList = section.getAttribute('id')!.split('-');\n      if (idSplitList.length === 4) {\n        order.push(idSplitList.slice(1, 10).join('-'));\n        observer.observe(section);\n      }\n    });\n  }\n};"]}